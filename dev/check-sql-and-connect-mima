#!/usr/bin/env bash

#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

set -o pipefail
set -e

# Go to the Spark project root directory
SPARK_HOME="$(cd "`dirname "$0"`"/..; pwd)"
cd "$SPARK_HOME"

TOOLS_CLASSPATH="$(build/sbt -DcopyDependencies=false "export tools/fullClasspath" | grep jar | tail -n1)"
SQL_BUILD_RESULT="$(build/sbt clean sql/package | tail -n1 | awk '{print $1}')"
if [ "$SQL_BUILD_RESULT" != "[success]" ]; then
  echo "ERROR: sql module package failed."
  # shellcheck disable=SC2242
  exit 1
fi
CONNECT_BUILD_RESULT="$(build/sbt clean connect-client-jvm/assembly | tail -n1 | awk '{print $1}')"
if [ "$CONNECT_BUILD_RESULT" != "[success]" ]; then
  echo "ERROR: connect-client-jvm module assembly failed."
  # shellcheck disable=SC2242
  exit 1
fi


if [[ -x "$JAVA_HOME/bin/java" ]]; then
  JAVA_CMD="$JAVA_HOME/bin/java"
else
  JAVA_CMD=java
fi

ERRORS=$($JAVA_CMD -Xmx2g -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.util.jar=ALL-UNNAMED -cp "$TOOLS_CLASSPATH" org.apache.spark.tools.SqlAndConnectCompatibilityCheck | grep ERROR)

if test ! -z "$ERRORS"; then
    echo -e "sql and connect-client-jvm module check mima failed at following occurrences:\n$ERRORS"
    exit 1
else
    echo -e "sql and connect-client-jvm module check mima passed."
fi